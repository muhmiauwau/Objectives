// @ts-ignore
const context = window?.SillyTavern?.getContext() || {}
console.log("context", context.chatMetadata)
import { environment } from '../environments/environment';

console.log(environment);



export const  { 
    accountStorage,
    chat,
    characters,
    groups,
    name1,
    name2,
    characterId,
    groupId,
    chatId,
    getCurrentChatId,
    getRequestHeaders,
    reloadCurrentChat,
    renameChat,
    saveSettingsDebounced,
    onlineStatus,
    maxContext,
    chatMetadata,
    streamingProcessor,
    eventSource,
    eventTypes,
    addOneMessage,
    deleteLastMessage,
    generate,
    sendStreamingRequest,
    sendGenerationRequest,
    stopGeneration,
    tokenizers,
    getTextTokens,
    getTokenCount,
    getTokenCountAsync,
    extensionPrompts,
    setExtensionPrompt,
    updateChatMetadata,
    saveChat,
    openCharacterChat,
    openGroupChat,
    saveMetadata,
    sendSystemMessage,
    activateSendButtons,
    deactivateSendButtons,
    saveReply,
    substituteParams,
    substituteParamsExtended,
    SlashCommandParser,
    SlashCommand,
    SlashCommandArgument,
    SlashCommandNamedArgument,
    ARGUMENT_TYPE,
    executeSlashCommandsWithOptions,
    registerSlashCommand,
    executeSlashCommands,
    timestampToMoment,
    registerHelper,
    registerMacro,
    unregisterMacro,
    registerFunctionTool,
    unregisterFunctionTool,
    isToolCallingSupported,
    canPerformToolCalls,
    ToolManager,
    registerDebugFunction,
    renderExtensionTemplate,
    renderExtensionTemplateAsync,
    registerDataBankScraper,
    callPopup,
    callGenericPopup,
    showLoader,
    hideLoader,
    mainApi,
    extensionSettings,
    ModuleWorkerWrapper,
    getTokenizerModel,
    generateQuietPrompt,
    generateRaw,
    writeExtensionField,
    getThumbnailUrl,
    selectCharacterById,
    messageFormatting,
    shouldSendOnEnter,
    isMobile,
    t,
    translate,
    getCurrentLocale,
    addLocaleData,
    tags,
    tagMap,
    menuType,
    createCharacterData,
    event_types,
    Popup,
    POPUP_TYPE,
    POPUP_RESULT,
    chatCompletionSettings,
    textCompletionSettings,
    powerUserSettings,
    getCharacters,
    getCharacterCardFields,
    uuidv4,
    humanizedDateTime,
    updateMessageBlock,
    appendMediaToMessage,
    swipe,
    variables,
    loadWorldInfo,
    saveWorldInfo,
    reloadWorldInfoEditor,
    updateWorldInfoList,
    convertCharacterBook,
    getWorldInfoPrompt,
    CONNECT_API_MAP,
    getTextGenServer,
    extractMessageFromData,
    getPresetManager,
    getChatCompletionModel,
    printMessages,
    clearChat,
    ChatCompletionService,
    TextCompletionService,
    ConnectionManagerRequestService,
    updateReasoningUI,
    parseReasoningFromString,
    unshallowCharacter,
    unshallowGroupMembers,
    symbols
} = context;
